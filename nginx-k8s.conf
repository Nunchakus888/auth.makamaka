user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $request_time $upstream_response_time $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65; 

  
    server {
        listen 80;
        root /usr/share/nginx/html/;
        server_name  dev.makamaka.io;
        
        # see https://www.techrepublic.com/article/how-to-configure-gzip-compression-with-nginx/
        gzip  on;  
        gzip_vary on; # tells proxies to cache both gzipped and regular versions of a resource
        gzip_proxied expired no-cache no-store private auth; # compress data even for clients that are connecting via proxies (here we’re enabling compression if: a response header includes the “expired”, “no-cache”, “no-store”, “private”, and “Authorization” parameters)
        gzip_min_length 1024; # bytes
        gzip_types text/plain application/atom+xml application/geo+json application/javascript application/x-javascript application/json application/ld+json application/manifest+json application/rdf+xml application/rss+xml application/xhtml+xml application/xml font/eot font/otf font/ttf image/svg+xml text/css text/javascript text/xml;

        client_max_body_size 8m;
        proxy_buffers 16 480k;  
        proxy_buffer_size 480k;


        location / {
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            expires off;
            error_page 404 /index.html;
            #if ($request_uri ~ /.*(\.js|\.css)$){
            #   set $nocache 1;
            #}
            #proxy_no_cache $nocache $cookie_nocache $arg_nocache $arg_comment;
            #proxy_cache_bypass $nocache $cookie_nocache $arg_nocache $arg_comment;
        }
        location /api/ {
            proxy_pass http://backend:80; # for dmzz test env, should be customized
        }
    }
}
