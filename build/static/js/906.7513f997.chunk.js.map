{"version":3,"file":"static/js/906.7513f997.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","nc/render.js","ui-component/Logo.js","ui-component/extended/AnimateButton.js","ui-component/cards/MainCard.js","views/user/authentication/AuthCardWrapper.js","views/user/authentication/AuthWrapper1.js","views/user/authentication/auth-forms/AuthReset.js","views/user/authentication/authentication3/Reset3.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n  const scripted = useRef(true);\n\n  useEffect(\n    () => () => {\n      scripted.current = false;\n    },\n    []\n  );\n\n  return scripted;\n};\n\nexport default useScriptRef;\n","import './render.css';\nimport { Card, Button, Typography } from '@mui/material';\nimport { Trans } from 'react-i18next';\n\nconst NcRender = () => {\n  return (\n    <div id=\"nc-captcha-container\" className=\"nc-captcha-container\">\n      <Card sx={{ minWidth: 500, minHeight: 200, display: 'flex',  justifyContent: 'center', flexDirection: 'column', alignItems: 'center' }}\n      >\n        <Typography variant='h3' style={{ marginBottom: '20px', display: 'flex', justifyContent: 'center'}}>\n          <Trans i18nKey=\"slider_validation\"/>\n        </Typography>\n        <div>\n          <div id=\"captcha\" style={{position: 'relative', display:'flex', justifyContent:'center', marginBottom: '30px',}}/>\n        </div>\n        <Button \n          variant=\"contained\" \n          onClick={() => {\n            window?.nc.switch();\n          }}\n          sx={{background: 'linear-gradient(to right, #2ddfff, #f47dff);', width: 300}}\n        >\n          <Trans i18nKey=\"confirm.ngBtn\"/>\n        </Button>\n      </Card>\n    </div>\n  )\n}\n\nexport default NcRender\n","import { Box, ButtonBase } from '@mui/material';\nimport { websiteConfig } from 'utils/constant/websiteConstant';\n/**\n * if you want to use image instead of <svg> uncomment following.\n *\n * import logoDark from 'assets/images/logo-dark.svg';\n * import logo from 'assets/images/logo.svg';\n *\n */\n\n// ==============================|| LOGO SVG ||============================== //\n\nconst Logo = (props) => {\n  const imgurl = websiteConfig.logo;\n  const width = websiteConfig.logoWidth;\n\n  return (\n    <ButtonBase disabled>\n      <Box sx={{ display: 'flex', gap: '5px', alignItems: 'center' }}>\n        {/* eslint-disable-next-line jsx-a11y/alt-text */}\n        <img src={imgurl} alt='logo' style={{ width: width }} />\n      </Box>\n    </ButtonBase>\n  );\n};\n\nexport default Logo;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n  let offset1;\n  let offset2;\n  switch (direction) {\n    case 'up':\n    case 'left':\n      offset1 = offset;\n      offset2 = 0;\n      break;\n    case 'right':\n    case 'down':\n    default:\n      offset1 = 0;\n      offset2 = offset;\n      break;\n  }\n\n  const [x, cycleX] = useCycle(offset1, offset2);\n  const [y, cycleY] = useCycle(offset1, offset2);\n\n  switch (type) {\n    case 'rotate':\n      return (\n        <motion.div\n          ref={ref}\n          animate={{ rotate: 360 }}\n          transition={{\n            repeat: Infinity,\n            repeatType: 'loop',\n            duration: 2,\n            repeatDelay: 0\n          }}\n        >\n          {children}\n        </motion.div>\n      );\n    case 'slide':\n      if (direction === 'up' || direction === 'down') {\n        return (\n          <motion.div ref={ref} animate={{ y: y !== undefined ? y : '' }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\n            {children}\n          </motion.div>\n        );\n      }\n      return (\n        <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n          {children}\n        </motion.div>\n      );\n\n    case 'scale':\n    default:\n      if (typeof scale === 'number') {\n        scale = {\n          hover: scale,\n          tap: scale\n        };\n      }\n      return (\n        <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n          {children}\n        </motion.div>\n      );\n  }\n});\n\nAnimateButton.propTypes = {\n  children: PropTypes.node,\n  offset: PropTypes.number,\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n  type: 'scale',\n  offset: 10,\n  direction: 'right',\n  scale: {\n    hover: 1,\n    tap: 0.9\n  }\n};\n\nexport default AnimateButton;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n  '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n  (\n    {\n      border = true,\n      boxShadow,\n      children,\n      content = true,\n      contentClass = '',\n      contentSX = {},\n      darkTitle,\n      secondary,\n      shadow,\n      sx = {},\n      title,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useTheme();\n\n    return (\n      <Card\n        ref={ref}\n        {...others}\n        sx={{\n          border: border ? '1px solid' : 'none',\n          borderColor: theme.palette.primary[200] + 75,\n          ':hover': {\n            boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit',\n          },\n          backgroundColor:'#E5E2FF',\n          ...sx,\n          '.MuiCardContent-root:last-child': {\n            paddingBottom: '12px'\n        }\n        }}\n      >\n        {/* card header and action */}\n        {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\n        {darkTitle && title && <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />}\n\n        {/* content & header divider */}\n        {title && <Divider />}\n\n        {/* card content */}\n        {content && (\n          <CardContent sx={contentSX} className={contentClass}>\n            {children}\n          </CardContent>\n        )}\n        {!content && children}\n      </Card>\n    );\n  }\n);\n\nMainCard.propTypes = {\n  border: PropTypes.bool,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  contentSX: PropTypes.object,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n  shadow: PropTypes.string,\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n  <MainCard\n    sx={{\n      maxWidth: { xs: 400, lg: 475 },\n      margin: { xs: 2.5, md: 3 },\n      '& > *': {\n        flexGrow: 1,\n        flexBasis: '50%'\n      }\n    }}\n    content={false}\n    {...other}\n  >\n    <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n  </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n  children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.primary.light,\n  minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  OutlinedInput,\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport * as Api from '../../../../api/user';\nimport useToast from \"../../../../hooks/useToast\";\nimport defaultLanguage from 'i18n/defaultLanguage';\nimport { Trans } from 'react-i18next';\n\n// ============================|| FIREBASE - Reset ||============================ //\n\nconst FirebaseReset = ({ ...others }) => {\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  const toast = useToast();\n\n  const googleHandler = async () => {\n    console.error('Reset');\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          const tocheckingPage = () => {\n            location.href = \"/checking\";\n          }\n          //发送邮件\n          const { code, info, msg } = await Api.useinfo(values, (msg) => toast(msg, { variant: 'error' }), tocheckingPage).catch(e => e);\n          if (code === 0) {\n            tocheckingPage()\n          } else {\n            toast(msg || \"验证失败\", { variant: 'error' });\n          }\n          try {\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n              <InputLabel htmlFor=\"outlined-adornment-email-Reset\">\n                <Trans i18nKey=\"user.register_email\">{defaultLanguage.user.register_email}</Trans>\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-email-Reset\"\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                label=\"Email Address\"\n                inputProps={{}}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText error id=\"standard-weight-helper-text-email-Reset\">\n                  {errors.email}\n                </FormHelperText>\n              )}\n            </FormControl>\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n                <Button disableElevation disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"secondary\">\n                  <Trans i18nKey=\"confirm.okBtn\">{defaultLanguage.confirm.okBtn}</Trans>\n                </Button>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default FirebaseReset;\n","import { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthReset from '../auth-forms/AuthReset';\nimport Logo from 'ui-component/Logo';\nimport defaultLanguage from 'i18n/defaultLanguage';\nimport { Trans } from 'react-i18next';\nimport NcRender from '../../../../nc/render'\n\nconst Reset = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n  return (\n    <AuthWrapper1>\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n        <Grid item xs={12}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item sx={{ mb: 3 }}>\n                    <Logo />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\n                      <Grid item>\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                          <Typography color={theme.palette.secondary.main} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\n                            <Trans i18nKey=\"user.reset_title\">{defaultLanguage.user.reset_title}</Trans>\n                          </Typography>\n                          <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : 'inherit'}>\n                            <Trans i18nKey=\"user.reset_info\">{defaultLanguage.user.reset_info}</Trans>\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <AuthReset />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <NcRender/>\n    </AuthWrapper1>\n  );\n};\n\nexport default Reset;\n"],"names":["scripted","useRef","useEffect","current","id","className","Card","sx","minWidth","minHeight","display","justifyContent","flexDirection","alignItems","Typography","variant","style","marginBottom","i18nKey","position","Button","onClick","window","nc","switch","background","width","props","imgurl","websiteConfig","disabled","gap","src","alt","AnimateButton","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","x","cycleX","useCycle","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","headerSX","mr","border","boxShadow","content","contentClass","contentSX","darkTitle","secondary","shadow","title","others","theme","useTheme","borderColor","palette","primary","backgroundColor","paddingBottom","CardHeader","action","Divider","CardContent","other","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","Box","p","sm","xl","AuthWrapper1","styled","light","scriptedRef","useScriptRef","toast","useToast","showPassword","setShowPassword","useState","initialValues","email","submit","validationSchema","Yup","shape","max","required","onSubmit","async","values","setErrors","setStatus","setSubmitting","tocheckingPage","location","href","code","info","msg","Api","catch","e","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","defaultLanguage","OutlinedInput","value","name","onBlur","onChange","label","inputProps","FormHelperText","mt","disableElevation","size","color","matchDownSM","useMediaQuery","breakpoints","down","Grid","container","item","m","mb","AuthCardWrapper","spacing","Logo","Stack","main","gutterBottom","fontSize","textAlign","AuthReset"],"sourceRoot":""}